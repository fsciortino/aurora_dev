# Recipe to push to conda-forge. 
# The sha256 is the preferred checksum. It can be obtained using
#  curl -sL https://github.com/fsciortino/Aurora/archive/v0.1.6-beta.1.tar.gz | openssl sha256
# but pointing to the appropriate latest tagged .tar.gz file. 

package:
  name: aurorafusion
  version: "{{ load_setup_py_data().version }}"

source:
  url: https://github.com/fsciortino/Aurora/archive/v0.1.6-beta.1.tar.gz
  sha256: 3729941063a0afe7b5c5c30a40057db1cecf1570dc4de2e3c9da9eeca491de0d


build:
  number: 0

requirements:
  build:
    - {{ compiler('fortran') }}
  host:
    - python
    - numpy {{ numpy }}
  run:
    - python
    - {{ pin_compatible('numpy') }}
    
test:
  imports:
    - aurora

about:
  home: https://github.com/fsciortino/aurora	
  license_file: USER_AGREEMENT.txt
  summary: 'Modern toolbox for impurity transport, neutrals and radiation modeling in fusion plasmas'
  description: |
    Aurora is a package to simulate heavy-ion transport and radiation in magnetically-confined plasmas. 
    It offers a 1.5D impurity transport forward model inheriting from the historical STRAHL code, 
    with which it has been thoroughly benchmarked. Routines to analyze neutral states of hydrogen 
    isotopes, both from the edge of fusion plasmas and from neutral beam injection, allow integration 
    of impurity and neutral transport analysis. Aurora’s code is mostly written in Python 3 and 
    Fortran 90, with a Julia interface also recently added. The package enables radiation calculations 
    using ADAS atomic rates, which can easily be applied to the output of Aurora’s own forward model, 
    or coupled with other 1D, 2D or 3D transport codes.
  doc_url: https://aurora-fusion.readthedocs.io/
  dev_url: https://github.com/fsciortino/aurora


extra:
  recipe-maintainers:
    - fsciortino